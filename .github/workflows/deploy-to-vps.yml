name: Deploy - to VPS via GHCR
on:
  workflow_call:
    secrets:
      SSH_PRIVATE_KEY:
        required: true
      VPS_HOST:
        required: true
      VPS_USER:
        required: true
      GHCR_TOKEN:
        required: true
      GHCR_USERNAME:
        required: true
      DISCORD_WEBHOOK:
        required: true
      GHCR_ORG:
        required: true
    inputs:
      IMAGE_NAME:
        required: true
        type: string
      COMPOSE_PATH:
        required: true
        type: string
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 🔐 Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: 🚀 SSH to VPS and Deploy
        run: |
          # Create a deployment script
          cat > deploy.sh << 'EOL'
          #!/bin/bash
          set -e
          
          GHCR_TOKEN="$1"
          GHCR_USERNAME="$2"
          GHCR_ORG="$3"
          IMAGE_NAME="$4"
          COMPOSE_PATH="$5"
          
          echo "Cleaning up old GHCR login (if any)..."
          docker logout ghcr.io || true
          
          echo "Logging into GHCR..."
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
          
          echo "Pulling image: ghcr.io/$GHCR_ORG/$IMAGE_NAME:latest"
          docker pull ghcr.io/$GHCR_ORG/$IMAGE_NAME:latest
          
          echo "Restarting service with Docker Compose"
          docker compose -f $COMPOSE_PATH up -d
          
          echo "Cleaning up unused images..."
          docker image prune -f
          EOL
          
          # Make the script executable
          chmod +x deploy.sh
          
          # Copy the script to the remote server
          scp -o StrictHostKeyChecking=no deploy.sh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/tmp/deploy.sh
          
          # Execute the script with the parameters
          ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "/tmp/deploy.sh '${{ secrets.GHCR_TOKEN }}' '${{ secrets.GHCR_USERNAME }}' '${{ secrets.GHCR_ORG }}' '${{ inputs.IMAGE_NAME }}' '${{ inputs.COMPOSE_PATH }}' && rm /tmp/deploy.sh"
          
      - name: Send Discord Notification (Success)
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            ✅ **Deployment SUCCEEDED** on `${{ github.repository }}`
            🧱 Image: `${{ inputs.IMAGE_NAME }}`
            👤 Triggered by: `${{ github.actor }}`
            🔗 [View Workflow Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
      - name: Send Discord Notification (Failure)
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            🔥 **Deployment FAILED** on `${{ github.repository }}`
            🧱 Image: `${{ inputs.IMAGE_NAME }}`
            👤 Triggered by: `${{ github.actor }}`
            🚨 Job: `${{ github.job }}`
            🔗 [View Workflow Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
